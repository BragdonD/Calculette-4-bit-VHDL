|calculateur
A[0] => full_add_comp:additionneur0.A[0]
A[0] => full_multi_comp:multiplicateur0.A[0]
A[1] => full_add_comp:additionneur0.A[1]
A[1] => full_multi_comp:multiplicateur0.A[1]
A[2] => full_add_comp:additionneur0.A[2]
A[2] => full_multi_comp:multiplicateur0.A[2]
A[3] => full_add_comp:additionneur0.A[3]
A[3] => full_multi_comp:multiplicateur0.A[3]
B[0] => full_add_comp:additionneur0.B[0]
B[0] => full_multi_comp:multiplicateur0.B[0]
B[1] => full_add_comp:additionneur0.B[1]
B[1] => full_multi_comp:multiplicateur0.B[1]
B[2] => full_add_comp:additionneur0.B[2]
B[2] => full_multi_comp:multiplicateur0.B[2]
B[3] => full_add_comp:additionneur0.B[3]
B[3] => full_multi_comp:multiplicateur0.B[3]
CLA => choix_display:MuxAfficheur.CLA
mode => full_add_comp:additionneur0.mode
mode => full_multi_comp:multiplicateur0.mode
mode => choix_display:MuxAfficheur.mode
mode => mux3vers1:MuxError.SEL0
operation => choix_display:MuxAfficheur.operation
operation => mux3vers1:MuxError.SEL1
reset => choix_display:MuxAfficheur.Reset
resultat[0] <= choix_display:MuxAfficheur.Resultat[0]
resultat[1] <= choix_display:MuxAfficheur.Resultat[1]
resultat[2] <= choix_display:MuxAfficheur.Resultat[2]
resultat[3] <= choix_display:MuxAfficheur.Resultat[3]
modesOut[0] <= choix_display:MuxAfficheur.ModesOut[0]
modesOut[1] <= choix_display:MuxAfficheur.ModesOut[1]
modesOut[2] <= choix_display:MuxAfficheur.ModesOut[2]
modesOut[3] <= choix_display:MuxAfficheur.ModesOut[3]
error <= mux3vers1:MuxError.OUTPUT


|calculateur|full_add_comp:additionneur0
A[0] => add4_bits:additionneur0.operande1[0]
A[0] => verif_add:verif0.operande1[0]
A[1] => add4_bits:additionneur0.operande1[1]
A[1] => verif_add:verif0.operande1[1]
A[2] => add4_bits:additionneur0.operande1[2]
A[2] => verif_add:verif0.operande1[2]
A[3] => add4_bits:additionneur0.operande1[3]
A[3] => verif_add:verif0.operande1[3]
B[0] => add4_bits:additionneur0.operande2[0]
B[0] => verif_add:verif0.operande2[0]
B[1] => add4_bits:additionneur0.operande2[1]
B[1] => verif_add:verif0.operande2[1]
B[2] => add4_bits:additionneur0.operande2[2]
B[2] => verif_add:verif0.operande2[2]
B[3] => add4_bits:additionneur0.operande2[3]
B[3] => verif_add:verif0.operande2[3]
mode => verif_add:verif0.mode
Res[0] <= verif_add:verif0.ResVerif[0]
Res[1] <= verif_add:verif0.ResVerif[1]
Res[2] <= verif_add:verif0.ResVerif[2]
Res[3] <= verif_add:verif0.ResVerif[3]
error <= verif_add:verif0.error


|calculateur|full_add_comp:additionneur0|add4_bits:additionneur0
operande1[0] => add1_bit:add0.entry1
operande1[1] => add1_bit:add1.entry1
operande1[2] => add1_bit:add2.entry1
operande1[3] => add1_bit:add3.entry1
operande2[0] => add1_bit:add0.entry2
operande2[1] => add1_bit:add1.entry2
operande2[2] => add1_bit:add2.entry2
operande2[3] => add1_bit:add3.entry2
Res[0] <= add1_bit:add0.Res
Res[1] <= add1_bit:add1.Res
Res[2] <= add1_bit:add2.Res
Res[3] <= add1_bit:add3.Res
Cout <= add1_bit:add3.Cout


|calculateur|full_add_comp:additionneur0|add4_bits:additionneur0|add1_bit:add0
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_add_comp:additionneur0|add4_bits:additionneur0|add1_bit:add1
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_add_comp:additionneur0|add4_bits:additionneur0|add1_bit:add2
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_add_comp:additionneur0|add4_bits:additionneur0|add1_bit:add3
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_add_comp:additionneur0|verif_add:verif0
ResAdd[0] => tempResMode[0].IN1
ResAdd[0] => tempResOverFlow[0].IN0
ResAdd[1] => tempResMode[1].IN1
ResAdd[1] => tempResOverFlow[1].IN0
ResAdd[2] => tempResMode[2].IN1
ResAdd[2] => tempResOverFlow[2].IN0
ResAdd[3] => ErrorMode.IN1
ResAdd[3] => tempResMode[3].IN1
ResAdd[3] => tempResOverFlow[3].IN0
operande1[0] => ~NO_FANOUT~
operande1[1] => ~NO_FANOUT~
operande1[2] => ~NO_FANOUT~
operande1[3] => ErrorMode.IN0
operande2[0] => ~NO_FANOUT~
operande2[1] => ~NO_FANOUT~
operande2[2] => ~NO_FANOUT~
operande2[3] => ErrorMode.IN1
mode => ErrorMode.IN1
Cin => error.IN1
Cin => tempResOverFlow[3].IN1
Cin => tempResOverFlow[2].IN1
Cin => tempResOverFlow[1].IN1
Cin => tempResOverFlow[0].IN1
ResVerif[0] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[1] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[2] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[3] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0
A[0] => multiplicateur_4bits:multiplicateur0.input1[0]
A[0] => verif_multi:verif0.operande1[0]
A[1] => multiplicateur_4bits:multiplicateur0.input1[1]
A[1] => verif_multi:verif0.operande1[1]
A[2] => multiplicateur_4bits:multiplicateur0.input1[2]
A[2] => verif_multi:verif0.operande1[2]
A[3] => multiplicateur_4bits:multiplicateur0.input1[3]
A[3] => verif_multi:verif0.operande1[3]
B[0] => multiplicateur_4bits:multiplicateur0.input2[0]
B[0] => verif_multi:verif0.operande2[0]
B[1] => multiplicateur_4bits:multiplicateur0.input2[1]
B[1] => verif_multi:verif0.operande2[1]
B[2] => multiplicateur_4bits:multiplicateur0.input2[2]
B[2] => verif_multi:verif0.operande2[2]
B[3] => multiplicateur_4bits:multiplicateur0.input2[3]
B[3] => verif_multi:verif0.operande2[3]
mode => multiplicateur_4bits:multiplicateur0.mode
mode => verif_multi:verif0.mode
Res[0] <= verif_multi:verif0.ResVerif[0]
Res[1] <= verif_multi:verif0.ResVerif[1]
Res[2] <= verif_multi:verif0.ResVerif[2]
Res[3] <= verif_multi:verif0.ResVerif[3]
error <= verif_multi:verif0.error


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0
input1[0] => B0[0].IN0
input1[0] => B1[0].IN0
input1[0] => B2[0].IN0
input1[0] => B3[0].IN0
input1[0] => resultat.IN0
input1[1] => B0[1].IN0
input1[1] => B1[1].IN0
input1[1] => B2[1].IN0
input1[1] => B3[1].IN0
input1[2] => B0[2].IN0
input1[2] => B1[2].IN0
input1[2] => B2[2].IN0
input1[2] => B3[2].IN0
input1[3] => B0[3].IN0
input1[3] => B1[3].IN0
input1[3] => B2[3].IN0
input1[3] => B3[3].IN0
input2[0] => B0[0].IN1
input2[0] => B0[1].IN1
input2[0] => B0[2].IN1
input2[0] => B0[3].IN1
input2[0] => resultat.IN1
input2[1] => B1[0].IN1
input2[1] => B1[1].IN1
input2[1] => B1[2].IN1
input2[1] => B1[3].IN1
input2[2] => B2[0].IN1
input2[2] => B2[1].IN1
input2[2] => B2[2].IN1
input2[2] => B2[3].IN1
input2[3] => B3[0].IN1
input2[3] => B3[1].IN1
input2[3] => B3[2].IN1
input2[3] => B3[3].IN1
mode => ~NO_FANOUT~
resultat[0] <= resultat.DB_MAX_OUTPUT_PORT_TYPE
resultat[1] <= add4_bits:add4bits_0.Res[0]
resultat[2] <= add4_bits:add4bits_1.Res[0]
resultat[3] <= add4_bits:add4bits_2.Res[0]
resultat[4] <= add4_bits:add4bits_2.Res[1]
resultat[5] <= add4_bits:add4bits_2.Res[2]
resultat[6] <= add4_bits:add4bits_2.Res[3]
resultat[7] <= add4_bits:add4bits_2.Cout


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_0
operande1[0] => add1_bit:add0.entry1
operande1[1] => add1_bit:add1.entry1
operande1[2] => add1_bit:add2.entry1
operande1[3] => add1_bit:add3.entry1
operande2[0] => add1_bit:add0.entry2
operande2[1] => add1_bit:add1.entry2
operande2[2] => add1_bit:add2.entry2
operande2[3] => add1_bit:add3.entry2
Res[0] <= add1_bit:add0.Res
Res[1] <= add1_bit:add1.Res
Res[2] <= add1_bit:add2.Res
Res[3] <= add1_bit:add3.Res
Cout <= add1_bit:add3.Cout


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_0|add1_bit:add0
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_0|add1_bit:add1
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_0|add1_bit:add2
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_0|add1_bit:add3
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_1
operande1[0] => add1_bit:add0.entry1
operande1[1] => add1_bit:add1.entry1
operande1[2] => add1_bit:add2.entry1
operande1[3] => add1_bit:add3.entry1
operande2[0] => add1_bit:add0.entry2
operande2[1] => add1_bit:add1.entry2
operande2[2] => add1_bit:add2.entry2
operande2[3] => add1_bit:add3.entry2
Res[0] <= add1_bit:add0.Res
Res[1] <= add1_bit:add1.Res
Res[2] <= add1_bit:add2.Res
Res[3] <= add1_bit:add3.Res
Cout <= add1_bit:add3.Cout


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_1|add1_bit:add0
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_1|add1_bit:add1
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_1|add1_bit:add2
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_1|add1_bit:add3
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_2
operande1[0] => add1_bit:add0.entry1
operande1[1] => add1_bit:add1.entry1
operande1[2] => add1_bit:add2.entry1
operande1[3] => add1_bit:add3.entry1
operande2[0] => add1_bit:add0.entry2
operande2[1] => add1_bit:add1.entry2
operande2[2] => add1_bit:add2.entry2
operande2[3] => add1_bit:add3.entry2
Res[0] <= add1_bit:add0.Res
Res[1] <= add1_bit:add1.Res
Res[2] <= add1_bit:add2.Res
Res[3] <= add1_bit:add3.Res
Cout <= add1_bit:add3.Cout


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_2|add1_bit:add0
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_2|add1_bit:add1
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_2|add1_bit:add2
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|multiplicateur_4bits:multiplicateur0|add4_bits:add4bits_2|add1_bit:add3
entry1 => temp.IN0
entry1 => Cout.IN0
entry2 => temp.IN1
entry2 => Cout.IN1
Cin => Res.IN1
Cin => Cout.IN1
Res <= Res.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|full_multi_comp:multiplicateur0|verif_multi:verif0
ResMulti[0] => tempResMode[0].IN1
ResMulti[0] => tempResOverFlow[0].IN1
ResMulti[1] => tempResMode[1].IN1
ResMulti[1] => tempResOverFlow[1].IN1
ResMulti[2] => tempResMode[2].IN1
ResMulti[2] => tempResOverFlow[2].IN1
ResMulti[3] => ErrorMode.IN1
ResMulti[3] => tempResMode[3].IN1
ResMulti[3] => tempResOverFlow[3].IN1
ResMulti[4] => ErrorOverFlow.IN1
ResMulti[5] => ErrorOverFlow.IN1
ResMulti[6] => ErrorOverFlow.IN0
ResMulti[7] => ErrorOverFlow.IN1
operande1[0] => ~NO_FANOUT~
operande1[1] => ~NO_FANOUT~
operande1[2] => ~NO_FANOUT~
operande1[3] => ErrorMode.IN0
operande2[0] => ~NO_FANOUT~
operande2[1] => ~NO_FANOUT~
operande2[2] => ~NO_FANOUT~
operande2[3] => ErrorMode.IN1
mode => ErrorMode.IN1
ResVerif[0] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[1] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[2] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
ResVerif[3] <= ResVerif.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|choix_display:MuxAfficheur
ResAdd[0] => Mux3.IN4
ResAdd[1] => Mux2.IN4
ResAdd[2] => Mux1.IN4
ResAdd[3] => Mux0.IN4
ResCLA[0] => Mux3.IN5
ResCLA[0] => Mux3.IN6
ResCLA[1] => Mux2.IN5
ResCLA[1] => Mux2.IN6
ResCLA[2] => Mux1.IN5
ResCLA[2] => Mux1.IN6
ResCLA[3] => Mux0.IN5
ResCLA[3] => Mux0.IN6
ResMulti[0] => Mux3.IN7
ResMulti[1] => Mux2.IN7
ResMulti[2] => Mux1.IN7
ResMulti[3] => Mux0.IN7
mode => ModesOut[3].DATAIN
CLA => Mux0.IN9
CLA => Mux1.IN9
CLA => Mux2.IN9
CLA => Mux3.IN9
CLA => ModesOut[1].DATAIN
Reset => Mux0.IN10
Reset => Mux1.IN10
Reset => Mux2.IN10
Reset => Mux3.IN10
Reset => ModesOut[0].DATAIN
operation => Mux0.IN8
operation => Mux1.IN8
operation => Mux2.IN8
operation => Mux3.IN8
operation => ModesOut[2].DATAIN
Resultat[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Resultat[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Resultat[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Resultat[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ModesOut[0] <= Reset.DB_MAX_OUTPUT_PORT_TYPE
ModesOut[1] <= CLA.DB_MAX_OUTPUT_PORT_TYPE
ModesOut[2] <= operation.DB_MAX_OUTPUT_PORT_TYPE
ModesOut[3] <= mode.DB_MAX_OUTPUT_PORT_TYPE


|calculateur|Mux3vers1:MuxError
IN0 => Mux0.IN0
IN1 => Mux0.IN1
IN2 => Mux0.IN2
IN2 => Mux0.IN3
SEL0 => Mux0.IN4
SEL1 => Mux0.IN5
OUTPUT <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


